plugins {
	id 'java'
	id 'eclipse'
	id "maven"
	id "maven-publish"

	id "com.github.ben-manes.versions" version "0.28.0"
	id "com.jfrog.bintray" version "1.8.4"

	id 'com.gradle.plugin-publish' version '0.11.0'
	id 'co.riiid.gradle' version '0.4.2'
//	id 'net.saliman.cobertura' version '2.5.4'

	id 'synapticloop.copyrightr' version '1.3.1'
	id 'synapticloop.documentr' version '3.0.0'
}

group = 'synapticloop'
archivesBaseName = 'h2zero-extension-taglibs'
description = """Taglib extension for h2zero"""
version = '1.3.0'

tasks.withType(Javadoc).all { enabled = false }

sourceCompatibility = 1.9
targetCompatibility = 1.9

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

dependencies {
	compile 'synapticloop:h2zero:4.1.11'

	implementation 'javax.servlet.jsp:jsp-api:2.2'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'


	testImplementation 'junit:junit:4.12'
	testImplementation 'org.mockito:mockito-all:1.10.19'
	testImplementation 'com.github.stefanbirkner:system-rules:1.16.1'
	testImplementation 'mysql:mysql-connector-java:8.0.19'
	testImplementation 'org.xerial:sqlite-jdbc:3.30.1'
	testImplementation 'commons-io:commons-io:2.6'
	testImplementation 'com.mashape.unirest:unirest-java:1.4.9'
}

configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
		force 'junit:junit:4.11',
					'org.slf4j:slf4j-api:1.7.25',
					'org.json:json:20180130',
					'commons-logging:commons-logging:1.2',
					'commons-collections:commons-collections:3.2.2',
					'com.github.stefanbirkner:system-rules:1.17.1',
					'org.apache.httpcomponents:httpclient:4.5.2'
	}
}

//cobertura {
//	coverageFormats = [ 'html', 'xml']
//	coverageDirs = [
//		project.sourceSets.main.output.classesDir,
//		file("build/classes/test/")
//	]
//	coverageSourceDirs = [ 
//		project.sourceSets.main.java.srcDirs, 
//		file("src/test/java/")
//	]
//}

test {
	include '**/*Test.class'
	maxParallelForks = 1
}

def javaApiUrl = 'http://docs.oracle.com/javase/1.7.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'

tasks.withType(Javadoc) {
	options.links(javaApiUrl, groovyApiUrl)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

//test.finalizedBy(project.tasks.cobertura)


publishing {
	publications {
		Synapticloop(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar

			groupId group

			artifactId archivesBaseName

			pom.withXml {
				configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
					asNode().dependencies[0].dependency.find {
						it.artifactId[0].text() == dep.moduleName &&
								it.groupId[0].text() == dep.moduleGroup
					}.scope[0].value = 'compile'
				}
			}
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_PASSWORD')

	publications = [ 'Synapticloop' ]

	publish = true

	pkg {
		repo = 'maven'
		name = 'h2zero-extension-taglibs'
	}
}

github {
	owner = 'synapticloop'
	repo = archivesBaseName
	if(System.getenv('GITHUB_TOKEN')) {
		token = System.getenv('GITHUB_TOKEN')
	}
	tagName = version
	name = version
	assets = [
		'build/libs/' + archivesBaseName + '-' + version + '.jar',
	]
}

copyrightr {
	excludes [
	]
	dryRun = false
}

//task(dist).dependsOn( [ 'cobertura', 'jar', 'javadoc' ] )

task(dist).dependsOn( [ 'jar', 'javadoc' ] )
