{\t}@Override{\n}
{\t}public int doStartTag() throws JspException {{{\n}

{if fn:=[baseQueryObject, 'finder']}
{if finder.unique}
		{\t}{\t}{\t}pageContext.setAttribute(var, {table.javaClassName}{if table.isView}View{endif}{baseQueryObject.type}.{baseQueryObject.name}(
			{import classpath:/snippet/global/java-taglib-method-call.templar}));{\n}
{else}
	{\t}{\t}if(limit != null) {{{\n}
		{\t}{\t}{\t}pageContext.setAttribute(var, {table.javaClassName}{if table.isView}View{endif}{baseQueryObject.type}.{baseQueryObject.name}(
			{import classpath:/snippet/global/java-taglib-method-call.templar}{if !fn:=[fn:length[baseQueryObject.whereFields], '0']}{endif}).withLimit(limit).withOffset(offset).executeSilent()
		);{\n}

	{\t}{\t}} else {{{\n}
		{\t}{\t}{\t}pageContext.setAttribute(var, {table.javaClassName}{if table.isView}View{endif}{baseQueryObject.type}.{baseQueryObject.name}(
			{import classpath:/snippet/global/java-taglib-method-call.templar}));{\n}
	{\t}{\t}}{\n}
{endif}

{else}
	{\t}{\t}pageContext.setAttribute(var, {table.javaClassName}{if table.isView}View{endif}{baseQueryObject.type}.{baseQueryObject.name}(
		{import classpath:/snippet/global/java-taglib-method-call.templar}).executeSilent());{\n}

{endif}
	{\t}{\t}return(EVAL_BODY_INCLUDE);{\n}
{\t}}{\n}{\n}
